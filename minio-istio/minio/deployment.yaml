apiVersion: v1
kind: Secret
metadata:
  name: minio-secret
  namespace: minio-service
type: Opaque
data:
  .accesskey: bWluaW8uYWRtaW5AdGVjaHRlbC5jb20=
  .secretkey: bWluaW9hZG1pbg==
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: minio-pvc
  namespace: minio-service
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 5Gi
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: minio-sa
  namespace: minio-service
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: minio
  namespace: minio-service
  labels:
    app: minio
    version: v1
spec:
  serviceName: minio
  selector:
    matchLabels:
      app: minio
      version: v1
  replicas: 1
  template:
    metadata:
      labels:
        app: minio
        version: v1
    spec:
      serviceAccountName: minio-sa
      containers:
      - name: minio
        image: quay.io/minio/minio:RELEASE.2025-03-12T18-04-18Z
        imagePullPolicy: Always
        args:
        - server
        - /data
        - --console-address
        - :9090
        lifecycle:
          postStart:
            exec:
              command: 
              - "/bin/sh"
              - "-c"
              - |
                sleep 3s
                mc alias set minioserver $MINIO_HOST $MINIO_ROOT_USER $MINIO_ROOT_PASSWORD --api "S3v4" --path "auto"
        resources:
          requests:
            cpu: 10m
            memory: 100Mi
          limits: {}
        env:
        - name: MINIO_ROOT_USER
          valueFrom:
            secretKeyRef:
              name: minio-secret
              key: .accesskey
        - name: MINIO_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: minio-secret
              key: .secretkey
        - name: MINIO_HOST
          value: http://localhost:9000
        - name: MINIO_IDENTITY_OPENID_DISPLAY_NAME
          value: "Login with SSO"
        - name: MINIO_IDENTITY_OPENID_CONFIG_URL
          value: "http://dex.auth.svc.cluster.local:5556/dex/.well-known/openid-configuration"
        - name: MINIO_IDENTITY_OPENID_CLIENT_ID
          value: "minio-client-app"
        - name: MINIO_IDENTITY_OPENID_CLIENT_SECRET
          value: "minio-client-app-secret"
        - name: MINIO_IDENTITY_OPENID_ROLE_POLICY
          value: "consoleAdmin"
        - name: MINIO_IDENTITY_OPENID_SCOPES
          value: "openid,groups"
        - name: MINIO_BROWSER_REDIRECT
          value: "true"
        - name: MINIO_BROWSER_REDIRECT_URL
          value: "http://localhost:8009"
        - name: MINIO_BROWSER_SESSION_DURATION
          value: "10m"
        - name: MINIO_PROMETHEUS_URL
          value: "http://prometheus.istio-system.svc.cluster.local:9090"
        - name: MINIO_PROMETHEUS_AUTH_TYPE
          value: "public"
        - name: MINIO_PROMETHEUS_JOB_ID
          value: "minio-job"
        ports:
        - containerPort: 9000
          protocol: TCP
        - containerPort: 9090
          protocol: TCP
        volumeMounts:
        - mountPath: /data
          name: data
          subPath: minio
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: minio-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: minio-service
  namespace: minio-service
  labels:
    app: minio
spec:
  type: ClusterIP
  sessionAffinity: None
  ports:
  - name: data-port
    port: 9000
    protocol: TCP
    targetPort: 9000
  - name: console-port
    port: 9090
    protocol: TCP
    targetPort: 9090
  selector:
    app: minio
    version: v1
---
apiVersion: networking.istio.io/v1beta1
kind: Gateway
metadata:
  name: minio-gateway
  namespace: minio-service
spec:
  selector:
    istio: ingressgateway
  servers:
  - hosts:
    - '*'
    port:
      name: http
      number: 80
      protocol: HTTP
---
apiVersion: security.istio.io/v1
kind: AuthorizationPolicy
metadata:
  name: minio-console
  namespace: minio-service
  labels:
    app: minio
spec:
  action: ALLOW
  rules:
  - from:
    - source:
        principals:
        - cluster.local/ns/istio-system/sa/istio-ingressgateway-service-account
  selector:
    matchLabels:
      app: minio
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: minio
  namespace: minio-service
spec:
  gateways:
  - minio-gateway
  hosts:
  - '*'
  http:
  - match:
    - uri:
        prefix: /
    rewrite:
      uri: /
    route:
    - destination:
        host: minio-service.minio-service.svc.cluster.local
        port:
          number: 9090