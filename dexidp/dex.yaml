apiVersion: v1
kind: Secret
metadata:
  name: dex-oidc-client
  namespace: auth
type: Opaque
data:
  OIDC_CLIENT_ID: bWluaW8tY2xpZW50LWFwcA==
  OIDC_CLIENT_SECRET: bWluaW8tY2xpZW50LWFwcC1zZWNyZXQ=
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: dex
  namespace: auth
data:
  issuer: http://dex.auth.svc.cluster.local:5556/dex
  ldap_host: ldap.auth.svc.cluster.local:389
  ldap_bind_dn: cn=adminuser,dc=techtel,dc=com
  ldap_bind_pw: admin123
  ldap_user_base_dn: dc=techtel,dc=com
  ldap_group_base_dn: ou=users,dc=techtel,dc=com
  client_id: OIDC_CLIENT_ID
  oidc_redirect_uris: '["/authservice/oidc/callback"]'
  application_secret: OIDC_CLIENT_SECRET
  config.yaml: |
    issuer: http://dex.auth.svc.cluster.local:5556/dex
    storage:
      type: kubernetes
      config:
        inCluster: true
    web:
      http: 0.0.0.0:5556
      telemetry:
        http: 0.0.0.0:5558
    logger:
      level: "debug"
      format: text
    connectors:
      - type: ldap
        id: ldap
        name: OpenLDAP
        config:
          scopes:
            - openid
            - email
          host: openldap.auth:389
          insecureNoSSL: true
          insecureSkipVerify: true
          startTLS: false
          bindDN: cn=adminuser,dc=techtel,dc=com
          bindPW: admin123

          usernamePrompt: "Email Address"

          userSearch:
            baseDN: dc=techtel,dc=com
            username: sn
            idAttr: uid
            emailAttr: mail
            nameAttr: sn
          
          groupSearch:
            baseDN: dc=techtel,dc=com
            userMatchers:
            - userAttr: DN
              groupAttr: member
            nameAttr: sn

    oauth2:
      skipApprovalScreen: true
    staticClients:
    - idEnv: OIDC_CLIENT_ID
      redirectURIs: ["/authservice/oidc/callback"]
      # redirectURIs: ["http://localhost:9001/"]
      name: 'MINIO OIDC CLIENT'
      secretEnv: OIDC_CLIENT_SECRET
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: dex
  name: dex
  namespace: auth
spec:
  replicas: 1
  selector:
    matchLabels:
        app: dex
  template:
    metadata:
      labels:
        app: dex
      annotations:
        sidecar.istio.io/inject: "false"
    spec:
      serviceAccountName: dex
      containers:
      - image: ghcr.io/dexidp/dex:v2.36.0
        imagePullPolicy: IfNotPresent
        name: dex
        command: ["dex", "serve", "/etc/dex/cfg/config.yaml"]
        ports:
        - name: http
          containerPort: 5556
        - name: grpc
          containerPort: 5557
        - name: metrics
          containerPort: 5558
        volumeMounts:
        - name: config
          mountPath: /etc/dex/cfg
        envFrom:
        - secretRef:
            name: dex-oidc-client
        env:
        - name: KUBERNETES_POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
      volumes:
      - name: config
        configMap:
          name: dex
          items:
          - key: config.yaml
            path: config.yaml
---
apiVersion: v1
kind: Service
metadata:
  name: dex
  namespace: auth
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 5556
    protocol: TCP
    targetPort: 5556
  - name: grpc
    port: 5557
    protocol: TCP
    targetPort: 5557
  - name: grpc
    port: 5558
    protocol: TCP
    targetPort: 5558
  selector:
    app: dex